#
# Copyright (c) 1999, 2021, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

help.cmd.proto=Usage:\n\t{0} options... tests...\n\nTests can be given as \
    files or folders containing test files, or by means of test groups. \
    Long lists of options and tests may be encapsulated in "at-files".
help.cmd.introHead=For brief details about a topic, use "-help <term> ...". \
    The argument <term> is a command option or other word related to the topic. \
    Use "-help all" to show all of the help entries.\n\nInformation is \
    available for the following topics.\n
help.cmd.fullHead=
help.cmd.summaryHead=Information is available for the following topics:
help.copyright.txt=Copyright (c) 1999, 2021, Oracle and/or its affiliates. \
    All rights reserved.\nUse is subject to license terms.
help.cmd.noEntriesFound=No entries were found that matched your query.

help.doc.name=Documentation Options
help.doc.desc=Options for additional documentation\n
help.doc.help.desc=Command line help. Give words to see help info containing those \
    or use "-help all" to see all available help.
help.doc.help.arg=[words...]
help.doc.n.desc=Release notes
help.doc.t.desc=Tag specification supported by this implementation
help.doc.version.desc=Give information about the version of jtreg in use.

help.jcov.name=JCov-related options
help.jcov.desc=\
    jtreg provides support for using the jcov code coverage tool to gather \
    code coverage information while tests are being run. At a minimum, you \
    must specify where to find the classes to be monitored, and where to find \
    source code for those classes. For more details, see the JCov User Guide \
    and the command line help for the jcov programs: \
    Instr, Grabber, GrabberManager and RepGen.\n

help.jcov.jcov_classes.desc=\
    Specify where to find the classes to be monitored.  The classes will be \
    statically instrumented in a temporary directory, and prefixed to the \
    system boot class path.
help.jcov.jcov_classes.arg=<directory>
help.jcov.jcov_exclude.desc=\
    Specify a pattern for the classes not to be monitored. Default is none.
help.jcov.jcov_exclude.arg=<regexp>
help.jcov.jcov_include.desc=\
    Specify a pattern for the classes to be monitored. Default is all classes.
help.jcov.jcov_include.arg=<regexp>
help.jcov.jcov_include_list.desc=\
    Specify a file containing patterns for the classes to be monitored. \
    Each line of the file should contain a single regular expression.
help.jcov.jcov_include_list.arg=<file>
help.jcov.jcov_print_env.desc=\
    Enable a debugging option to view the settings for each jcov command \
    that is executed.
help.jcov.jcov_source.desc=\
    Specify where to find the source code for the classes to be monitored. \
    The source code will be used when generating the final report.
help.jcov.jcov_source.arg=<searchpath>
help.jcov.jcov_patch.desc=\
    Specify a patch file to be used to generate a coverage report for the \
    lines modified in the patch. A summary will be printed to the console, \
    with details being written to text/patch.txt in the main report directory.
help.jcov.jcov_patch.arg=<patch-file>
help.jcov.jcov_verbose.desc=\
    Enable verbose output from the jcov tools that are executed.
help.jcov.jcov_verbosemore.desc=\
    Enable the most verbose output from the jcov tools that are executed.

help.jdk.name=JDK-related Options
help.jdk.desc=\
    By default, tests will be run using the default JVM in the test JDK. \
    You can pass all applicable JVM options via using -vmoption; in addition, \
    many common JVM options are also supported directly. \
    For full details of any option, consult the documentation for that version \
    of the JDK, or try using "java -help" or "java -X". \
    If an option is not applicable to a particular platform or JDK release, it \
    will be rejected.\n
help.jdk.D.desc=Define a system property
help.jdk.D.arg=<name>=<value>
help.jdk.X.desc=Non-standard VM Options.
help.jdk.X.arg=*
help.jdk.Xbootclasspath.arg=<path>
help.jdk.Xbootclasspath.desc=Set search path for bootstrap classes and resources
help.jdk.Xbootclasspath_a.arg=<path>
help.jdk.Xbootclasspath_a.desc=Append to end of bootstrap class path
help.jdk.Xbootclasspath_p.arg=<path>
help.jdk.Xbootclasspath_p.desc=Prepend in front of bootstrap class path
help.jdk.XX.desc=Non-standard VM Options
help.jdk.XX.arg=*
help.jdk.Xint.desc=Non-standard VM Options
help.jdk.Xint.arg=*
help.jdk.Xrunjcov.desc=Options for running jcov
help.jdk.Xrunjcov.arg=*
help.jdk.classic.desc=VM Options
help.jdk.cpa.desc=Append the provided classPath to the CLASSPATH of every \
    test.  This is designed to be used primarily for tests \
    which require non-core JDK functionality.  For example, \
    to test Swing, which is not part of core JDK1.1, the \
    following addition to the the CLASSPATH would be \
    necessary: \n\
    -cpa:/usr/local/java/swing-1.0.3/swingall.jar
help.jdk.cpa.arg=<path>
help.jdk.enableassertions.desc=Enable or disable assertions
help.jdk.enableassertions.arg=*
help.jdk.enablesystemassertions.desc=Enable or disable system assertions
help.jdk.add_modules.arg=<module>(,<module>)*
help.jdk.add_modules.desc=root modules to resolve in addition to the initial module
help.jdk.limit_modules.arg=<module>(,<module>)*
help.jdk.limit_modules.desc=limit the universe of observable modules
help.jdk.jdk.desc=Run all tests using specified JDK. \
    e.g. -jdk:/usr/local/java/jdk1.5/solaris-sparc
help.jdk.jdk.arg=<java.home>
help.jdk.compilejdk.desc=Compile all tests using specified JDK. \
    If not specified, tests are compiled with the JDK used to run the tests. \
    See also -jdk. \
    e.g. -jdk:/usr/local/java/jdk1.5/solaris-sparc
help.jdk.compilejdk.arg=<java.home>
help.jdk.jit.desc=Enable the JIT for the tests.  The JIT is turned on by default.
help.jdk.nojit.desc=Disable the JIT for the tests.
help.jdk.patch_module.desc=Specify classes to override module classes
help.jdk.patch_module.arg=<module>=<path>
help.jdk.vmoption.desc=Any other VM option. \
    You can give this option multiple times. \
    Any embedded filenames must be given with absolute paths. \
    This option will be used when compiling and running classes. \
    See also -javaoption.
help.jdk.vmoption.arg=<option>
help.jdk.vmoptions.desc=Any other VM options. You can give this option multiple \
    times, or give many values together, separated by spaces. If you give multiple \
    values, you may need to enclose them in quotes, depending on the shell you use. \
    Any embedded filenames must be given with absolute paths. Warning: do not \
    use this form if any of the options has an argument such as a filename that might \
    contain spaces. In that case, use one or more -vmption options instead. \
    This option will be used when compiling and running classes. \
    See also -javaoptions.
help.jdk.vmoptions.arg=<option>...
help.jdk.debug.desc=Use this to specify VM options to attach a debugger \
    to a VM running a test. It is similar to -vmoptions except that it is not used \
    when starting VMs used to query the properties of that VM. \
    See also -javaoptions and -vmoptions.
help.jdk.debug.arg=<option>...
help.jdk.agentlib.desc=Load native agent library
help.jdk.agentlib.arg=<libname><[=<options>]
help.jdk.agentpath.desc=Load native agent library by full pathname
help.jdk.agentpath.arg=<pathname><[=<options>]
help.jdk.javaagent.desc=Load Java programming language agent
help.jdk.javaagent.arg=<jarpath><[=<options>]
help.jdk.javacoption.desc=Additional compiler option. \
    You can give this option multiple times. \
    Any embedded filenames must be given with absolute paths.
help.jdk.javacoption.arg=<option>
help.jdk.javacoptions.desc=Additional compiler options. You can give this option multiple \
    times, or give many values together, separated by spaces. If you give multiple \
    values, you may need to enclose them in quotes, depending on the shell you use. \
    Any embedded filenames must be given with absolute paths. Warning: do not \
    use this form if any of the options has an argument such as a filename that might \
    contain spaces. In that case, use one or more -javacoption options instead.
help.jdk.javacoptions.arg=<option>...
help.jdk.javaoption.desc=Additional java option for running test classes. \
    You can give this option multiple times. \
    Any embedded filenames must be given with absolute paths. \
    See also -vmoption.
help.jdk.javaoption.arg=<option>
help.jdk.javaoptions.desc=Additional java options for running test classes. \
    You can give this option multiple \
    times, or give many values together, separated by spaces. If you give multiple \
    values, you may need to enclose them in quotes, depending on the shell you use. \
    Any embedded filenames must be given with absolute paths. Warning: do not \
    use this form if any of the options has an argument such as a filename that might \
    contain spaces. In that case, use one or more -javaoption options instead. \
    See also -vmoptions.
help.jdk.javaoptions.arg=<option>...

help.main.name=General Options
help.main.desc=
help.main.c.desc=Verify correctness of test descriptions.  Does NOT run tests.
help.main.conc.arg=<factor>
help.main.conc.desc=concurrency factor
help.main.e.arg=name[=value][,name[=value]...]
help.main.e.desc=Specify additional environment variables to be passed to each \
    test. If a value is not given for a name, the current value of the \
    environment variable will be used. Standard environment variables, like \
    DISPLAY, LANG, windir, SystemRoot, etc, will automatically be given to each \
    test, if they are set in the current environment.
help.main.g.desc=Access regression extensions via the standard JavaTest harness gui
help.main.noignore.desc=suppress the effect of any @ignore tags, allowing the \
    test to proceed as if the @ignore tags were not present. Deprecated: see \
    the -ignore option.
help.main.ignore.arg=<value>
help.main.ignore.desc=Specify how to handle tests containing an @ignore tag.
help.main.ignore.quiet.desc=Completely ignore such tests.
help.main.ignore.error.desc=(Default.) Execute the actions up to the @ignore tag, \
    then give an "Error" result.
help.main.ignore.run.desc=Run the test, as though the @ignore tag were not present.
help.main.l.desc=List the tests that would be executed instead of executing them.
help.main.o.arg=<classname>
help.main.o.desc=Specifies the class to observe the progress of a test suite; \
    the class must implement a specific interface; contact a developer \
    for details. E.g. -o:SampleRegressionObserver
help.main.od.desc=Specifies the pathname of a directory or .jar file in which \
    the observer class is located.  The given pathname is simply appended to the \
    CLASSPATH used for the tests, thus care should be taken when naming an \
    observer not to collide with the names of classes internal to the JavaTest \
    harness or the JRE, e.g., put the observer class in its own named package.
help.main.od.arg=<path>
help.main.r.desc=All report files placed here; "./JTreport" is default
help.main.r.arg=<directory>
help.main.ro.desc=Generate report for previously executed tests.  This does not \
    re-run any tests.  A work directory containing the results of the executed \
    tests must be provided.  The default location is "./JTwork". To specify an \
    alternate directory, use -workDir.
help.main.nr.desc=Do not generate a final report.
help.main.report.desc=Configure the report generated after tests are run.
help.main.report.arg=<value>
help.main.report.none.desc=Do not generate a report; equivalent to -noreport.
help.main.report.executed.desc=Include tests executed in the latest run
help.main.report.all-executed.desc=Include all tests that have been executed in \
     current work directory
help.main.report.all.desc=Include all tests that are present in the test suite, \
     whether or not they have been executed
help.main.startHttpd.desc=Start the http server to view test results
help.main.showGroups.desc=Show the expansion (to files and directories) of the \
    groups given on the command line. To see the expansion of all the groups \
    in a test suite, specify the name of the test suite.
help.main.show.desc=Show information from a section in the results file for a test. \
    For example, -show:rerun
help.main.show.arg=<section-name>

help.main.w.desc=Location for .class files, .jtr files, etc. "./JTwork" is default
help.main.w.arg=<directory>
help.main.xml.desc=Create ant/junit  xml files into the workDir. Optionally \
    verify if the file is well formed.
help.main.xml.arg=verify
help.main.retain.desc=Specify files to be retained after each test completes \
    executing. \
    If -retain is not specified or is specified with lastRun, only the files \
    from the last test executed will be retained, in the test's scratch directory. \
    For all other uses of -retain, files will be retained in a test-specific \
    directory in the work-directory.
    If -retain is specified with no argument, all files will be retained. \
    Otherwise, the files may be described by one or more of the following values:
help.main.retain.all.desc=Retain all files generated by each test
help.main.retain.none.desc=Do not retain any of the files generated by each test
help.main.retain.pass.desc=Retain files generated by tests that pass
help.main.retain.fail.desc=Retain files generated by tests that fail
help.main.retain.error.desc=Retain files generated by tests that caused an error
help.main.retain.lastRun.desc=Retain files generated by the last test that was run (default)
help.main.retain.file-pattern.desc=Retain files that match a specific filename. \
    The name may contain '*' to match any sequence of characters. \
    For example, result.* or *.err.
help.main.retain.arg=<none,lastRun,pass,fail,error,all,file-pattern>,...
help.main.cygwin.desc=(Windows only) Use Cygwin to run shell tests
help.main.wsl.desc=(Windows only) Use the Windows Subsystem for Linux (WSL) to run shell tests
help.main.dir.desc=Specify a base directory for test files and directories
help.main.dir.arg=<dir>
help.main.allowSetSecurityManager.desc=Allow agentVM tests to set a security manager. \
    Default is "yes" if option not given or no value given for option.
help.main.allowSetSecurityManager.arg=<boolean-value>
help.main.allowSetSecurityManager.false.desc=Do not allow agentVM tests to set a security manager
help.main.allowSetSecurityManager.no.desc=Do not allow agentVM tests to set a security manager
help.main.allowSetSecurityManager.off.desc=Do not allow agentVM tests to set a security manager
help.main.allowSetSecurityManager.on.desc=Allow agentVM tests to set a security manager
help.main.allowSetSecurityManager.true.desc=Allow agentVM tests to set a security manager
help.main.allowSetSecurityManager.yes.desc=Allow agentVM tests to set a security manager
help.main.lock.arg=<file>
help.main.lock.desc=Lock file to use for tests in "exclusive access" directories \
    when running tests in multiple concurrent instances of jtreg.
help.main.nativepath.arg=<path>
help.main.nativepath.desc=Path to location of native libraries and programs needed \
    by the tests.

help.mode.name=Test Mode Options
help.mode.desc=\
    Each test consists of a series of steps, called actions. The jtreg harness \
    provides different modes, which determine the JVM to use to execute \
    each action. The default is to run each action in a new JVM.\n
help.mode.ovm.desc=Execute every action in a new JVM. This is the default. \
    It provides the maximum isolation between actions, at a significant \
    cost in performance.\n\
    The JDK to use can be specified with -testjdk or -jdk, except \
    for @compile actions, which use -compilejdk or -jdk. If values \
    are not provided, the environment variable JAVA_HOME is used.
help.mode.avm.desc=Execute each action using a pool of reusable JVMs, \
    except when an action specifies otherwise. \
    It provides good performance, and reasonable isolation between \
    actions: if a JVM can be reset to a standard state after it has \
    been used, it will be returned to the pool for reuse; otherwise, \
    it will be discarded and replaced if and when necessary. \
    This mode is generally recommended for all use.\n\
    The JDK to use can be specified with -testjdk or -jdk, except \
    for @compile actions, which use -compilejdk or -jdk. If values \
    are not provided, the environment variable JAVA_HOME is used.

help.pool.name=Agent Pool Options
help.pool.desc=\
    Options to configure the size of the pool of VMs used to execute \
    tests in agent mode.
help.pool.max_pool_size.arg=<number>
help.pool.max_pool_size.desc=\
     The maximum number of VMs to keep available in the agent pool. \
     The default is either 2x the concurrency.
help.pool.pool_idle_timeout.arg=<number>
help.pool.pool_idle_timeout.desc=\
     The time, in seconds, before an idle VM in the pool is \
     automatically closed.

help.select.name=Test Selection Options
help.select.desc=These options can be used to refine the set of tests to \
    be executed.\n
help.select.a.desc=Any test with /manual will not be run
help.select.bug.desc=Run only those tests which apply to the given bugid.
help.select.bug.arg=<bugid>
help.select.exclude.desc=Provide a file specifying tests that should not be run
help.select.exclude.arg=<file>
help.select.k.desc=A keyword boolean expression for test selection. The \
    expression can contain keyword names, combined with & (and), | (or), \
    ! (not) and parentheses.
help.select.k.arg=<keywordExpr>
help.select.m.desc=Only tests with /manual will be run
help.select.match.desc=Provide a file specifying tests that can be run \
    (inverse of -exclude)
help.select.match.arg=<file>
help.select.noshell.desc=Any tests which contain shell actions will not be run
help.select.status.arg=<value>,...
help.select.shell.desc=Only tests which contain shell actions will be run
help.select.status.desc=Select tests according to their result in an earlier \
    run. The value can be one or more of the following values, separated by commas.
help.select.status.pass.desc=Tests that passed
help.select.status.fail.desc=Tests that failed
help.select.status.notRun.desc=Tests that have not been run
help.select.status.error.desc=Tests that could not be run because of errors, or tests that were ignored

help.tests.name=Tests
help.tests.desc=Specifying collections of tests.\n

help.tests.at.name=at-files
help.tests.at.desc=\
    Long lists of options and tests may be encapsulated in "at-files". \
    Place the options and/or tests in a file and specify the name of the \
    file on the command line with @file. \
    Options or tests that include white space should be enclosed within \
    either single or double quote characters. \
    Comments may be included in the file by prefixing them with '#'. \
    To specify an option beginning with '@' on the command line, use "@@" \
    to avoid @file expansion.\n

help.tests.groups.name=Groups
help.tests.groups.desc=A test suite may define named groups of tests. \
    To specify the name of a group of tests on the command line, \
    use test-suite-dir:group-name, where test-suite-dir is a path to the \
    root directory of the test suite (i.e the directory containing the \
    TEST.ROOT file), and where group-name is the name of the group of tests \
    defined in the test suite. If test-suite-dir is omitted it defaults \
    to the value of the -dir option, if given, or to the current directory \
    otherwise.\n\
    (Note: on Windows, to avoid confusion with absolute path names including \
    a drive specifier, the test-suite-dir must not be specified with a \
    relative path consisting of a single letter.)\n\n\
    Groups are defined in a test suite using one or more Java properties files. \
    The names of these files must be listed in the "groups" entry in TEST.ROOT. \
    If the filename is enclosed in square brackets, no error message will be \
    given if the file cannot be found. Within the property files, each entry \
    specifies items to be included or excluded from the group. To include a test \
    or directory of tests, simply specify the name of the test or directory. \
    To exclude a test or directory of tests, use '-' followed by the name of \
    the test or directory.  To include the contents of another group, \
    use ':' followed by the name of the group. There must be no spaces between \
    the "-" or ":" and the name that follows.

help.timeout.name=Timeout Options
help.timeout.desc=These options control the behavior when tests run longer than their \
   specified timeout value.
help.timeout.th.desc=Specifies the class to handle timeouts. The class must extend \
    com.sun.javatest.regtest.TimeoutHandler. E.g. -th:MyHandler
help.timeout.th.arg=<classname>
help.timeout.thd.desc=Specifies the pathname of a directory or .jar file in which \
    the timeout handler class is located.  The given pathname is simply appended to the \
    CLASSPATH used for the tests, thus care should be taken when naming an \
    timeout handler not to collide with the names of classes internal to the JavaTest \
    harness or the JRE, e.g., put the timeout handler class in its own named package.
help.timeout.thd.arg=<path>
help.timeout.thtimeout.desc=Specifies execution time limitation for the timeout \
    handler. If the timeout handler does not finish its actions within the \
    specified period of time, it will be interrupted. Non-positive values mean \
    no limitation. The default value is 5 minutes (300 seconds).
help.timeout.thtimeout.arg=<#seconds>
help.timeout.timeout.desc=A scaling factor to extend the default timeout of all \
    tests.  Typically used when running tests on slow systems or systems with \
    slow file systems.
help.timeout.timeout.arg=<number>
help.timeout.tl.desc=Do not run tests which specify a timeout longer than a given \
    value. The comparison is done against any values specified in the test, \
    before any timeout factor is applied.
help.timeout.tl.arg=<#seconds>

help.verbose.name=Verbose Options
help.verbose.desc=These options control the amount of output written to the \
    console while running tests\n
help.verbose.v.desc=Increase the amount of output written to the console. A value, \
    or selected combinations of values separated by commas, \
    may be given to select the type of output desired.
help.verbose.v.all.desc=Selected contents of JTR file for all tests (includes stdout/stderr)
help.verbose.v.fail.desc=Selected contents of JTR file for failed tests
help.verbose.v.error.desc=Selected contents of JTR file for errored tests
help.verbose.v.pass.desc=Selected contents of JTR file for passed tests
help.verbose.v.summary.desc=One line of output per test: status, test name
help.verbose.v.default.desc=Three lines of output per test: start, end, status
help.verbose.v.nopass.desc=Suppress output for tests that passed
help.verbose.v.time.desc=Elapsed time per action
help.verbose.v.multirun.desc=Updates for each testsuite when tests from more than one \
    are being executed.
help.verbose.v.arg=<value>
help.verbose.v1.desc=Short for -verbose:summary
help.verbose.va.desc=Short for -verbose:all
help.verbose.ve.desc=Short for -verbose:error
help.verbose.vf.desc=Short for -verbose:fail
help.verbose.vp.desc=Short for -verbose:pass
help.verbose.vt.desc=Short for -verbose:time

help.cantFindReleaseNotes=The Release Notes are not available.
help.cantFindSpec=The Tag Specification is not available.
help.cantReadSpec=Error reading the Tag Specification: {0}
help.releaseNotes=The Release Notes are available in {0}
help.version.txt={0} {1}\nInstalled in {2}\nRunning on platform version {3} from {4}.\nBuilt with {5} on {6}.
help.version.unknown=(unknown)

jcov.error.reading.file=Error reading file {0}: {1}
jcov.file.not.found=File not found: {0}

main.badArgs=Error: {0}
main.badConcurrency=Bad use of -concurrency
main.badKeywords=Bad keyword expression: {0}
main.badLockFile=Bad lock file: {0}
main.badMaxPoolSize=Bad value for maximum pool size: {0}
main.badParams=Bad parameters specified: {0}
main.badPoolIdleTimeout=Bad value for agent pool idle timeout: {0}
main.badRetainNone="none" cannot be combined with other options for -retain
main.badRetainLastRun="lastRun" cannot be combined with other options for -retain
main.badTimeLimit=Bad value for -timeLimit
main.badTimeoutFactor=Bad use of -timeoutFactor
main.badTimeoutHandlerTimeout=Bad value for -timeoutHandlerTimeout
main.cantCreateDir=Cannot create directory: {0}
main.cantCreateLockFile="Can''t create lock file: {0}
main.cantCreateParameters="Can''t create parameters: {0}
main.cantDetermineExecMode=Cannot determine unique default exec mode from given test suites
main.cantFindFile=Cannot find file: {0}
main.cantFind.jtreg.jar=Cannot determine the location of jtreg.jar
main.cantFind.javatest.jar=Cannot determine the location of javatest.jar
main.cantOpenFile=Cannot open file {0}: {1}
main.cantOpenTestSuite=Cannot open test suite {0}: {1}
main.cantRead=Cannot read {0}: {1}
main.cantReadGroups=Cannot read group files for {0}: {1}
main.cantWritePolicyFile=Cannot write policy file: {0}
main.cantGetJDKProperties={1}
main.error=Error: {0}
main.errorClosingAgentLog=Error closing agent log file: {0}
main.errorReportingVersion=Error reporting version: {0}
main.groups.nogroups=No groups
main.incompatibleJDK=Incompatible kind of JDK used to compile or run tests ({0}) with that used to run jtreg ({1})
main.interrupted=Error: Interrupted!
main.jdk.not.set=JDK not set
main.jdk.not.found=JDK not found: {0}
main.jdk.unknown.version=cannot determine version for JDK: {0}
main.jdk.unsupported.version=JDK version {1} not supported: {0}
main.noDate=unknown
main.obsvrFault=problem instantiating observer: {0}
main.obsvrNotFound=Cannot find observer class: {0}
main.obsvrType=Observer is not of type {0}: {1}
main.onlyOneTestSuiteInGuiMode=Can only execute tests in one test suite in GUI mode
main.securityException=Error: Security exception occurred!\n{0}
main.testsFailed=Error: Some tests failed or other problems occurred.
main.tests.suite=Testsuite: {0}
main.tests.found=Tests found: {0}
main.tests.total=Total tests found: {0}
main.unexpectedException=Error: Unexpected exception occurred! {0}
main.unknownIgnore=Unrecognized value for -ignore: $1
main.unknownVerbose=unsupported level for verbose option: `{0}''
main.nativePathNotExist=The -nativepath path does not exist: {0}
main.nativePathNotDir=The -nativepath path is not a directory: {0}
main.nativePathMultiplePath=The argument to -nativepath cannot be more than one path.
main.requiredVersion=The testsuite at {0} requires jtreg version {1} or higher and this is jtreg version {2}.
main.warn.wsl.specified.found.cygwin=Warning: -wsl specified, but Cygwin detected
main.warn.cygwin.specified.found.wsl=Warning: -cygwin specified, but WSL detected
main.windowsOnly=This option is only for use on Windows: {0}

opt.bad.format=Bad format for option: {0}
opt.conflict=Invalid option combination: {0} and {1}
opt.duplicate=Duplicate option: {0}
opt.empty=Invalid option: (empty)
opt.missing.value=No value given for option {0}
opt.unexpected.value=Unexpected value for option {0}
opt.unknown=Invalid option: {0}

tm.invalidGroup=Group is invalid: {0}
